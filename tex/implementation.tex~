\section{Clustering Implementation}

Mininet Clustering was implemented with 300 lines of modifications to
the Mininet 1.0.0 code. We used a Python wrapper for the METIS
library~\cite{pymetis} and wrote our own code for setting up GRE
links. 

The majority of Mininet Clustering's code involves converting a
colored topology to a running (and distributed) Mininet. Broadly
speaking, this works by having each Mininet instance compute a
coloring separately. Because the algorithm is deterministic, and each
instance shares the same view of the cluster and the same input
topology, the colored output topology is identical.

Each cluster machine is configured with its color and a mapping of
colors to IP addresses. The machine uses its color to determine what
portion of the topology it is responsible for, and it uses the mapping
to determine what machines it needs to create GRE links to.

